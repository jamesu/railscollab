- task_item = show
%li.taskItem{id: "task_item_task_item.id"}
  - if can?(:edit,task_item)  !task_item.is_completed?
    .taskItemHandle{style: "display:none"}
      .inner [+]
  .taskItemContent
    - if can?(:edit,task_item)
      .taskControls
        = link_to render_icon('trash', 'Trash'), project_task_list_task_path(task_item.project, task_item.task_list, task_item), {confirm: t('task_delete_confirm'), data: { turbo_method: :delete }, class: 'blank taskDelete', :'data-remote': true, :'data-type': :json}
        = link_to 'Edit', edit_project_task_list_task_path(task_item.project, task_item.task_list, task_item), {class: 'blank taskEdit edit', :'data-remote': true, :'data-type': :json}
    - if can?(:edit,task_item)
      %input.checkbox.completion{type: "checkbox", checked: task_item.is_completed? ? "true" : nil}
        = link_to '', status_project_task_list_task_path(task_item.project, task_item.task_list, task_item)}
    - else
      %span.taskCheckbox= render_icon( (task_item.completed_on.nil? ? 'not-checked' : 'checked'), t('task_open'))
    %span.taskText
      - if not task_item.assigned_to.nil?
        %span.assignedTo
          = task_item.assigned_to.object_name
          = ":"
        = h task_item.text
        %span.desc= t('task_created_by',  user: link_to(h(task_item.created_by.display_name), user_path(task_item.created_by))).html_safe
        - if task_item.is_completed?
          %span.desc= t('task_list_completed_time_with_user',  time: format_usertime(task_item.completed_on, :task_list_completed_time_format), user: link_to_unless(task_item.completed_by.nil?, h(task_item.completed_by.try(:display_name)), user_path(task_item.completed_by))).html_safe
    .taskActions
      - if can?(:comment, task_item)
        = link_to render_icon('comment','', { class: comment }), project_task_list_task_path(task_item.project, task_item.task_list, task_item), {class: 'blank'}
      - if !task_item.is_completed?  can?(:create_time, task_item.project)
        - running_time = running_time_for_task(task_item)
        - unless running_time.nil?
          = link_to render_icon('stop', t('stop_time')), stop_project_time_path(running_time.project, running_time), class: 'blank stopTime'
        - else
          = link_to render_icon('start', t('start_time')), project_times_path(task_item.project), class: 'blank startTime', task: task_item.id

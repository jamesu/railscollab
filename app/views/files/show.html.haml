- @page_actions = []
- if can? :create_file, @active_project
  - @page_actions << {title: :add_file, url: new_project_file_path(@active_project)}
- if can? :create_folder, @active_project
  - @page_actions << {title: :add_folder, url: new_project_folder_path(@active_project)}

#fileDetails.block
  - if @file.is_private
    .private{title: "#{t('private_file')}"}
      %span= t('private_file')
  .header= h @file.filename
  .content
    #fileIcon
      %img{alt: "#{h @file.filename}", src: "#{filetype_icon_url(@file)}"}/
    #fileInfo
      - if @file.description
        #fileDescription= textilize @file.description
      - if !@folder.nil?
        #fileFolder
          %span.propertyName
            = t('folder')
            \:
          %a{href: "#{@folder.object_url}"}= h @folder.name
      - if !@last_revision.nil?
        #fileLastRevision
          %span.propertyName
            = t('last_revision')
            \:
          - if !@last_revision.created_by.nil?
            = t('revision_created_by', number: @last_revision.revision_number,                                             |
              user: "<a href=\"#{@last_revision.created_by.object_url}\">#{h @last_revision.created_by.display_name}</a>", |
              date: format_usertime(@last_revision.created_on, :revision_date_format_short)).html_safe                     |
          - else
            = t('revision_created_by', number: @last_revision.revision_number,                         |
              date: format_usertime(@last_revision.created_on, :revision_date_format_short)).html_safe |
      #fileTags
        %span.propertyName
          = t('tags')
          \:
        = tag_list @file
      .fileOptions= action_list actions_for_file(@file, @last_revision)
  .clear
- if !@revisions.empty?
  #revisions
    %h2= t('revisions')
    - @revisions.each do |revision|
      %div{class: "revision #{cycle('odd', 'even')} #{'lastRevision' if revision == @last_revision}", id: "revision#{revision.id}"}
        .revisionName
          - if !revision.created_by.nil?
            = t('revision_created_by', number: revision.revision_number,                                       |
              user: "<a href=\"#{revision.created_by.object_url}\">#{h revision.created_by.display_name}</a>", |
              date: format_usertime(revision.created_on, :revision_date_format)).html_safe                     |
          - else
            = t('revision_created_by', number: revision.revision_number,                   |
              date: format_usertime(revision.created_on, :revision_date_format)).html_safe |
        - if !revision.comment.empty?
          .revisionComment= textilize revision.comment
        .revisionOptions= action_list actions_for_file_revision(@file, revision)
/ Comments
#fileComments
  = render partial: 'comments/object_comments', locals: {comments: @logged_user.member_of_owner? ? @file.comments : @file.comments.is_public}
  - if can? :comment, @file
    = render partial: 'comments/add_form', locals: {commented_object: @file}
